import{_ as s,c as a,o as n,b as l}from"./app.2f35e2a4.js";const D=JSON.parse('{"title":"useDelEmptyValue","description":"","frontmatter":{},"headers":[{"level":2,"title":"Introduction","slug":"introduction","link":"#introduction","children":[]},{"level":2,"title":"Basic Usage","slug":"basic-usage","link":"#basic-usage","children":[]},{"level":2,"title":"Type Declaration","slug":"type-declaration","link":"#type-declaration","children":[]}],"relativePath":"Object/useDelEmptyValue/index.md"}'),e={name:"Object/useDelEmptyValue/index.md"},p=l(`<h1 id="usedelemptyvalue" tabindex="-1">useDelEmptyValue <a class="header-anchor" href="#usedelemptyvalue" aria-hidden="true">#</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-hidden="true">#</a></h2><p>Sometimes object params are used to provide background services, but you do not want to pass null values. So I want to give some parameters that are not null.</p><h2 id="basic-usage" tabindex="-1">Basic Usage <a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#FF7B72;">import</span><span style="color:#C9D1D9;"> { useDelEmptyValue } </span><span style="color:#FF7B72;">from</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&#39;@flypeng/tool&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">handleObj</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> { name: </span><span style="color:#A5D6FF;">&#39;@flypeng/tool&#39;</span><span style="color:#C9D1D9;">, date: </span><span style="color:#A5D6FF;">&#39;2023/01/03&#39;</span><span style="color:#C9D1D9;">, test: </span><span style="color:#79C0FF;">null</span><span style="color:#C9D1D9;"> }</span></span>
<span class="line"><span style="color:#FF7B72;">const</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">getObj</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">useDelEmptyValue</span><span style="color:#C9D1D9;">(handleObj) </span><span style="color:#8B949E;">// { name: &#39;@flypeng/tool&#39;, date: &#39;2023/01/03&#39; }</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#CF222E;">import</span><span style="color:#24292F;"> { useDelEmptyValue } </span><span style="color:#CF222E;">from</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&#39;@flypeng/tool&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">handleObj</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> { name: </span><span style="color:#0A3069;">&#39;@flypeng/tool&#39;</span><span style="color:#24292F;">, date: </span><span style="color:#0A3069;">&#39;2023/01/03&#39;</span><span style="color:#24292F;">, test: </span><span style="color:#0550AE;">null</span><span style="color:#24292F;"> }</span></span>
<span class="line"><span style="color:#CF222E;">const</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">getObj</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">useDelEmptyValue</span><span style="color:#24292F;">(handleObj) </span><span style="color:#6E7781;">// { name: &#39;@flypeng/tool&#39;, date: &#39;2023/01/03&#39; }</span></span>
<span class="line"></span></code></pre></div><h2 id="type-declaration" tabindex="-1">Type Declaration <a class="header-anchor" href="#type-declaration" aria-hidden="true">#</a></h2><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#8B949E;">/**</span></span>
<span class="line"><span style="color:#8B949E;"> * 删除对象中属性为Null的值</span></span>
<span class="line"><span style="color:#8B949E;"> */</span></span>
<span class="line"><span style="color:#FF7B72;">declare</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">useDelEmptyValue</span><span style="color:#C9D1D9;">&lt;</span><span style="color:#FFA657;">T</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">extends</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">Object</span><span style="color:#C9D1D9;">&gt;(</span><span style="color:#FFA657;">targetObj</span><span style="color:#FF7B72;">:</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">T</span><span style="color:#C9D1D9;">)</span><span style="color:#FF7B72;">:</span><span style="color:#C9D1D9;"> </span><span style="color:#FFA657;">T</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">|</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">undefined</span></span>
<span class="line"></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6E7781;">/**</span></span>
<span class="line"><span style="color:#6E7781;"> * 删除对象中属性为Null的值</span></span>
<span class="line"><span style="color:#6E7781;"> */</span></span>
<span class="line"><span style="color:#CF222E;">declare</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">function</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">useDelEmptyValue</span><span style="color:#24292F;">&lt;</span><span style="color:#953800;">T</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">extends</span><span style="color:#24292F;"> </span><span style="color:#953800;">Object</span><span style="color:#24292F;">&gt;(</span><span style="color:#953800;">targetObj</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">T</span><span style="color:#24292F;">)</span><span style="color:#CF222E;">:</span><span style="color:#24292F;"> </span><span style="color:#953800;">T</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">|</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">undefined</span></span>
<span class="line"></span></code></pre></div>`,7),o=[p];function t(c,r,y,i,d,F){return n(),a("div",null,o)}const h=s(e,[["render",t]]);export{D as __pageData,h as default};
