import{d as a,o as n,c as s,F as i,E as d,m as u,k as e,t as h,_ as m,I as y,a as o,R as g}from"./chunks/framework.zvTB9_zP.js";const _=JSON.parse('[{"text":"Bom","link":"/Bom/useLocationInfo/"},{"text":"Common","link":"/Common/useCommonType/"},{"text":"Date","link":"/Date/useFormatDate/"},{"text":"Dom","link":"/Dom/useDownloadFile/"},{"text":"Number","link":"/Number/useRandomInteger/"},{"text":"Object","link":"/Object/useObjectIsEmpty/"},{"text":"Regexp","link":"/Regexp/useCheckPhoneNumber/"},{"text":"String","link":"/String/useCheckIncludeEmoji/"},{"text":"Node","link":"/Node/useGetCurrentPath"}]'),f={id:"modules-show-container"},E=["href"],b=a({__name:"DevFunctionModulesShow",setup(l){return(p,c)=>(n(),s("div",f,[(n(!0),s(i,null,d(u(_),(t,r)=>(n(),s("div",{key:r},[e("a",{href:`/flypeng-tool${t.link}`},"- "+h(t.text)+" Functions 模块",9,E)]))),128))]))}}),k=m(b,[["__scopeId","data-v-b72752e1"]]),v=e("h1",{id:"dev-function",tabindex:"-1"},[o("Dev Function "),e("a",{class:"header-anchor",href:"#dev-function","aria-label":'Permalink to "Dev Function"'},"​")],-1),F=e("h2",{id:"introduce",tabindex:"-1"},[o("Introduce "),e("a",{class:"header-anchor",href:"#introduce","aria-label":'Permalink to "Introduce"'},"​")],-1),x=e("p",null,[o("当你准备向 "),e("strong",null,"@flypeng/tool"),o(" 新增新 Function 时，根据新 Function 的特性来决定放置在哪个模块。")],-1),D=e("p",null,[o("目前 "),e("strong",null,"@flypeng/tool"),o(" 已经存在如下模块：")],-1),C=g('<p>添加新 Hook Function 时，请运行 <code>pnpm run new</code> 来自动生成相关文件同时参考已存在的 Function 来进行开发</p><h2 id="attention" tabindex="-1">Attention <a class="header-anchor" href="#attention" aria-label="Permalink to &quot;Attention&quot;">​</a></h2><ol><li><p>函数命名统一： <code>useAaBb</code></p></li><li><p>函数统一被默认导出</p></li><li><p>函数命名时要确保名称唯一，不可重复</p></li></ol><p>此处做法的好处就是：开发者在使用工具库时，在输入 <code>use</code> 时 会列出所有的函数名称，会提供极好的类型提示</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { useAaBb } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@flypeng/tool/browser&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { useAaBb } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@flypeng/tool/browser&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><ol start="4"><li>文档中所出现的如下代码。均可在 <code>@flypeng/tool</code> 包中引入，这样做分包的目的是因为 <strong>Vitepress</strong> 中如果导入了 Node 模块在开发和构建当中都会出现一些奇怪的错误。而分包后，在开发阶段我们只在文档中引入 <code>@flypeng/browser</code>，而 <code>@flypeng/node</code> 模块则另外开了一个 <strong>playground</strong> 来测试相关钩子函数</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { xxx } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@flypeng/browser&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { xxx } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@flypeng/browser&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div>',7),w=JSON.parse('{"title":"Dev Function","description":"","frontmatter":{},"headers":[],"relativePath":"guide/devFunction.md","filePath":"guide/devFunction.md","lastUpdated":1700544640000}'),N={name:"guide/devFunction.md"},A=a({...N,setup(l){return(p,c)=>(n(),s("div",null,[v,F,x,D,y(k),C]))}});export{w as __pageData,A as default};
